;; use ABNF like grammar
;; char-val to case-sensitive
;; prose-val -> regexp
;; add peg lookaheads `!` `&`
;; add quiet `~`
;; add slice `$`
;; remove num-var
;;
;; vim:nowrap

comment     = ~<;[^\n]*\n> @comment
_           = ~<[ \t\r\n]*> [comment _]
ident       = ~<(?![0-9])[0-9a-zA-Z\-_]+> @ident
number      = ~<[0-9]+> @number
string      = ~(<"> <[^\"\r\n]*> <">) @string
match       = ~("<" <[^\x3e\r\n]*> ">") @match
label       = ident / string
repeat      = "+"
            / "*" [number]
            / number ["*" [number]]
patatom     = ident !(_ "=")            ; a rule reference
            / string                    ; keyword
            / match                     ; regular expressions
            / "[" _ patchoice _ "]"     ; optional
            / "(" _ patchoice _ ")"     ; simple paren
            / "{" _ patchoice _ "}"     ; list group brace
patops      = repeat _ patatom
            / "&" patatom   ; positive lookahead
            / "!" patatom   ; negative lookahead
            / "~" patatom   ; quiet
            / "$" patatom   ; slice
            / patatom
patlist     = patops *(_ patops)
patchoice   = patlist *(_ "/" _ patlist)
              [_ "@" label] ; extra expected branch
decl        = ident _ "=" _ patchoice
decl-list   = +(_ decl) _
